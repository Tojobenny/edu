# Generated by Django 2.2.3 on 2019-08-01 04:54
import os
import re
from django.db import migrations, connection


def load_data_from_sql(filename):
    file_path = os.path.join(os.path.dirname(__file__), '../sql/', filename)
    sql_file_data = open(file_path).readlines()
    with connection.cursor() as c:
        statement = ''
        delimiter = ';\n'
        for line in sql_file_data:
            if re.findall('DELIMITER', line):  # found delimiter
                if re.findall('^\s*DELIMITER\s+(\S+)\s*$', line):
                    delimiter = re.findall('^\s*DELIMITER\s+(\S+)\s*$', line)[0] + '\n'
                    continue
                else:
                    raise SyntaxError('Your usage of DELIMITER is not correct, go and fix it!')
            statement += line  # add lines while not met lines with current delimiter
            if line.endswith(delimiter):
                # found delimiter, add dash symbols (or any symbols you want) for
                # converting MySQL statements with multiply delimiters in SQL statement
                if delimiter != ';\n':
                    statement = statement.replace(';', '; --').replace(delimiter, ';')
                c.execute(statement)  # execute current statement
                statement = ''  # begin collect next statement


def unload_data_from_sql():
    """Please delete dumping data"""


class Migration(migrations.Migration):
    dependencies = [
        ('course', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_data_from_sql('initial_data.sql'), reverse_code=unload_data_from_sql),
    ]
